trigger:
  branches:
    include:
    - '*'  # must quote since '*' is a YAML reserved character; we want a string

parameters:
- name: initSteps
  type: stepList
  default:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
      displayName: 'Use Python $(python.version)'

    - task: NodeTool@0
      inputs:
        versionSpec: '12.x'

    - bash: npm install -g yarn
      displayName: 'Install Yarn'

    - bash: env
      displayName: 'List all environment variables'

    - bash: pip install --upgrade pip wheel setuptools
      displayName: 'Install Python base dependencies'

    - bash: |
        set -ex
        which python
        python --version
        pip list
      displayName: 'Python info'

- name: fixGethostnameMacSteps
  type: stepList
  default:
    - script: |
        ci/enable_sharing_mac.sh
        ci/add_etc_hosts.sh
      displayName: 'Fix socket.gethostname() in python on mac'

- name: initDockerSteps
  type: stepList
  default:
    - task: DockerInstaller@0
      inputs:
        dockerVersion: 19.03.8
        releaseType: stable
      displayName: 'Setup docker'

- name: initDockerMacSteps
  type: stepList
  default:
    - script: |
        ci/install_docker_desktop_mac.sh
        ci/start_docker_desktop_mac.sh
      displayName: 'Setup docker desktop for mac'

- name: pullContainersSteps
  type: stepList
  default:
    - script: |
        docker pull andrewgaul/s3proxy
        docker pull dperson/samba
      displayName: 'Pull containers used by tests'

- name: initS3proxyLocalSteps
  type: stepList
  default:
    - bash: |
        nohup ci/s3_local.sh -d -r
        sleep 5
      displayName: 'Start up local S3 server'

    - script: curl http://127.0.0.1:9000/
      displayName: 'Test local S3 server'

- name: initSmbOsWindowsSteps
  type: stepList
  default:
    - task: PowerShell@2
      inputs:
        targetType: 'filePath'
        filePath: 'ci/enable_os_share_windows.ps1'
        errorActionPreference: 'stop'
        failOnStderr: True
      displayName: 'Enable os builtin file sharing'
    - task: PowerShell@2
      inputs:
        targetType: 'filePath'
        filePath: 'ci/create_os_share_windows.ps1'
        errorActionPreference: 'stop'
        failOnStderr: True
      displayName: 'Create share on os builtin samba server'

- name: lintSteps
  type: stepList
  default:
    - script: cd js; yarn install
      displayName: 'Install Javascript lint deps'

    - script: make lintjs YARN=yarn
      displayName: 'Lint JS'

    - bash: pip install flake8
      displayName: 'Install Python lint deps'

    - script: make lintpy
      displayName: 'Lint Python'

- name: testPythonSteps
  type: stepList
  default:
    - bash: pip install --upgrade -e .[dev] -v
      displayName: 'Dev install of serverextension'

    - script: make testpy
      displayName: 'Test the Python serverextension backend'

    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testResultsFiles: 'python_junit.xml'
        testRunTitle: 'Publish test results for Python $(python.version) $(manylinux_flag)'

    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/*coverage.xml'

- name: testJavascriptSteps
  type: stepList
  default:
    - script: make js YARN=yarn
      displayName: 'Build the labextension'

    - script: make testjs YARN=yarn
      displayName: 'Run the Jest tests'

- name: testBrowserSteps
  type: stepList
  default:
    - bash: |
        set -ex
        pip install .
        jupyter lab build --debug
      displayName: 'Standard jupyter-fs install'

    - bash: |
        set -ex
        jupyter --paths
        jupyter lab paths
        jupyter serverextension list
        jupyter labextension list
      displayName: 'List Jupyter server/labextensions'

    - script: cd js; yarn test:browser
      displayName: 'Run JupyterLab browser check'


jobs:
- job: 'integrity__linux'
  pool:
    vmImage: 'ubuntu-latest'
  variables:
    python.version: '3.7'

  steps:
    - ${{ parameters.initSteps }}
    - ${{ parameters.lintSteps }}

- job: 'javascript__linux'
  pool:
    vmImage: 'ubuntu-latest'
  variables:
    python.version: '3.7'

  steps:
    - ${{ parameters.initSteps }}
    - ${{ parameters.testJavascriptSteps }}

- job: 'browser_check__linux'
  pool:
    vmImage: 'ubuntu-latest'
  variables:
    python.version: '3.7'

  steps:
    - ${{ parameters.initDockerSteps }}
    - ${{ parameters.pullContainersSteps }}
    - ${{ parameters.initSteps }}
    - ${{ parameters.testBrowserSteps }}

- job: 'python__linux'
  pool:
    vmImage: 'ubuntu-latest'
  variables:
    python.version: '3.7'

  steps:
    - ${{ parameters.initDockerSteps }}
    - ${{ parameters.pullContainersSteps }}
    - ${{ parameters.initSteps }}
    - ${{ parameters.testPythonSteps }}

- job: 'python__mac'
  pool:
    vmImage: 'macos-10.14'
  variables:
    python.version: '3.7'

  steps:
    - ${{ parameters.initDockerMacSteps }}
    - ${{ parameters.pullContainersSteps }}
    - ${{ parameters.initSteps }}
    - ${{ parameters.testPythonSteps }}

# TODO: delete this duplicate job, once the required test has been renamed on github: "Linux Python37" => "python__linux"
- job: 'Linux'
  pool:
    vmImage: 'ubuntu-latest'
  strategy:
    matrix:
      Python37:
        python.version: '3.7'

  steps:
    - ${{ parameters.initDockerSteps }}
    - ${{ parameters.pullContainersSteps }}
    - ${{ parameters.initSteps }}
    - ${{ parameters.testPythonSteps }}

# TODO: delete this duplicate job, once the required test has been renamed on github: "Mac Python37" => "python__mac"
- job: 'Mac'
  pool:
    vmImage: 'macos-10.14'
  strategy:
    matrix:
      Python37:
        python.version: '3.7'

  steps:
    - ${{ parameters.initDockerMacSteps }}
    - ${{ parameters.pullContainersSteps }}
    - ${{ parameters.initSteps }}
    - ${{ parameters.testPythonSteps }}


# - job: 'Windows'
#   pool:
#     vmImage: 'windows-2019'

#   strategy:
#     matrix:
#       Python37:
#         python.version: '3.7'

#   steps:
#     - ${{ parameters.initSmbOsWindowsSteps }}
#     - ${{ parameters.initS3proxyLocalSteps }}
#     - ${{ parameters.initSteps }}
#     - ${{ parameters.testSteps }}
#     - ${{ parameters.publishSteps }}
