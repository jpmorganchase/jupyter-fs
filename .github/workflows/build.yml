name: Build Status

on:
  push:
    branches:
      - main
    tags:
      - v*
    paths-ignore:
      - LICENSE
      - README.md
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.9"]
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: 'pyproject.toml'

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
  
    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 9
        package_json_file: js/package.json
  
    - name: Install dependencies
      run: make develop

    - name: Setup Linux testing infra
      run: make setup-infra-ubuntu DOCKER_COMPOSE="docker compose"
      if: ${{ matrix.os == 'ubuntu-latest' }}

    - name: Setup Mac testing infra
      run: sudo make setup-infra-mac
      if: ${{ matrix.os == 'macos-latest' }}

    - name: Setup Windows testing infra
      run: make setup-infra-win
      if: ${{ matrix.os == 'windows-latest' }}

    - name: Setup common testing infra
      run: make setup-infra-common

    - name: Lint
      run: make lint
      if: matrix.os == 'ubuntu-latest'

    - name: Checks
      run: make checks
      if: matrix.os == 'ubuntu-latest'

    - name: Build
      run: make build

    - name: Test
      run: make coverage
      if: matrix.os != 'windows-latest'

    - name: Teardown Linux testing infra
      run: make teardown-infra-ubuntu DOCKER_COMPOSE="docker compose"
      if: ${{ matrix.os == 'ubuntu-latest' }}

    - name: Teardown Mac testing infra
      run: make teardown-infra-mac
      if: ${{ matrix.os == 'macos-latest' }}

    - name: Teardown Windows testing infra
      run: make teardown-infra-win
      if: ${{ matrix.os == 'windows-latest' }}

    - name: Teardown common testing infra
      run: make teardown-infra-common

    - name: Upload test results (Python)
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.node-version }}
        path: '**/junit.xml'
      if: ${{ always() }}

    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      with:
        files: '**/junit.xml'
      if: matrix.os == 'ubuntu-latest'

    - name: Make dist
      run: make dist
      if: matrix.os == 'ubuntu-latest'

    - uses: actions/upload-artifact@v4
      with:
        name: dist-${{matrix.os}}
        path: dist
      if: matrix.os == 'ubuntu-latest'
